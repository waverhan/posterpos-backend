import nodemailer from 'nodemailer'

class EmailService {
  constructor() {
    this.transporter = null
    this.isConfigured = false
    this.initializeTransporter()
  }

  initializeTransporter() {
    try {
      // Configure email transporter based on environment variables
      const emailConfig = {
        host: process.env.SMTP_HOST || 'smtp.gmail.com',
        port: parseInt(process.env.SMTP_PORT) || 587,
        secure: process.env.SMTP_SECURE === 'true', // true for 465, false for other ports
        auth: {
          user: process.env.SMTP_USER,
          pass: process.env.SMTP_PASS
        }
      }

      // Only create transporter if credentials are provided
      if (emailConfig.auth.user && emailConfig.auth.pass) {
        this.transporter = nodemailer.createTransporter(emailConfig)
        this.isConfigured = true
        
      } else {
        
        
      }
    } catch (error) {
      console.error('‚ùå Failed to configure email service:', error)
    }
  }

  async sendOrderConfirmationEmail(order) {
    if (!this.isConfigured) {
      
      return { success: false, error: 'Email service not configured' }
    }

    try {
      const emailContent = this.generateOrderConfirmationEmail(order)
      
      const mailOptions = {
        from: `"${process.env.SHOP_NAME || 'Opillia Shop'}" <${process.env.SMTP_USER}>`,
        to: order.customer?.email,
        subject: emailContent.subject,
        text: emailContent.text,
        html: emailContent.html
      }

      
      const result = await this.transporter.sendMail(mailOptions)
      
      
      return { success: true, messageId: result.messageId }
    } catch (error) {
      console.error('‚ùå Failed to send order confirmation email:', error)
      return { success: false, error: error.message }
    }
  }

  generateOrderConfirmationEmail(order) {
    const shopName = process.env.SHOP_NAME || 'Opillia Shop'
    const shopPhone = process.env.SHOP_PHONE || '+38 (097) 324 46 68'
    const shopEmail = process.env.SHOP_EMAIL || 'info@opillia.com.ua'
    const shopWebsite = process.env.SHOP_WEBSITE || 'https://opillia.com.ua'

    const subject = `–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ${order.order_number} - ${shopName}`

    // Format delivery information
    const deliveryInfo = order.fulfillment === 'DELIVERY'
      ? `–î–æ—Å—Ç–∞–≤–∫–∞ –∑–∞ –∞–¥—Ä–µ—Å–æ—é: ${order.delivery_address}`
      : `–°–∞–º–æ–≤–∏–≤—ñ–∑ –∑ –º–∞–≥–∞–∑–∏–Ω—É: ${order.branch?.name || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}`

    // Format items list
    const itemsList = order.items.map(item =>
      `‚Ä¢ ${item.product?.name || '–¢–æ–≤–∞—Ä'} - ${item.quantity} —à—Ç. √ó ${item.unit_price.toFixed(2)} ‚Ç¥ = ${item.total_price.toFixed(2)} ‚Ç¥`
    ).join('\n')

    // Format estimated time
    const estimatedTime = order.estimated_delivery
      ? new Date(order.estimated_delivery).toLocaleString('uk-UA', {
          year: 'numeric',
          month: 'long',
          day: 'numeric',
          hour: '2-digit',
          minute: '2-digit'
        })
      : '–£—Ç–æ—á–Ω—é—î—Ç—å—Å—è'

    // Calculate subtotal
    const subtotal = order.total_amount - (order.delivery_fee || 0)

    const text = `
–í—ñ—Ç–∞—î–º–æ, ${order.customer?.name || '–®–∞–Ω–æ–≤–Ω–∏–π –∫–ª—ñ—î–Ω—Ç–µ'}!

–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ${order.order_number} —É—Å–ø—ñ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ —Ç–∞ –ø–µ—Ä–µ–¥–∞–Ω–æ –≤ –æ–±—Ä–æ–±–∫—É.

–î–ï–¢–ê–õ–Ü –ó–ê–ú–û–í–õ–ï–ù–ù–Ø:
${itemsList}

–ü–Ü–î–°–£–ú–û–ö:
–°—É–º–∞ —Ç–æ–≤–∞—Ä—ñ–≤: ${subtotal.toFixed(2)} ‚Ç¥
–î–æ—Å—Ç–∞–≤–∫–∞: ${(order.delivery_fee || 0).toFixed(2)} ‚Ç¥
–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: ${order.total_amount.toFixed(2)} ‚Ç¥

–°–ü–û–°–Ü–ë –û–¢–†–ò–ú–ê–ù–ù–Ø:
${deliveryInfo}
–û—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∏–π —á–∞—Å: ${estimatedTime}

–û–ü–õ–ê–¢–ê:
–û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ (–≥–æ—Ç—ñ–≤–∫–∞ –∞–±–æ –∫–∞—Ä—Ç–∫–∞)

${order.notes ? `–ö–û–ú–ï–ù–¢–ê–† –î–û –ó–ê–ú–û–í–õ–ï–ù–ù–Ø:\n${order.notes}\n` : ''}

–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.

–î—è–∫—É—î–º–æ –∑–∞ –≤–∏–±—ñ—Ä ${shopName}!

–ó –ø–æ–≤–∞–≥–æ—é,
–ö–æ–º–∞–Ω–¥–∞ ${shopName}

–ö–û–ù–¢–ê–ö–¢–ò:
üìû ${shopPhone}
‚úâÔ∏è ${shopEmail}
üåê ${shopWebsite}

---
–¶–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –Ω–∞ —Ü–µ–π –ª–∏—Å—Ç.
    `.trim()

    const html = `
<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</title>
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: linear-gradient(135deg, #2563eb, #7c3aed); color: white; padding: 20px; border-radius: 8px; text-align: center; margin-bottom: 20px; }
        .order-number { font-size: 24px; font-weight: bold; margin: 10px 0; }
        .section { background: #f8f9fa; padding: 15px; border-radius: 8px; margin: 15px 0; }
        .section h3 { margin-top: 0; color: #2563eb; }
        .items-list { list-style: none; padding: 0; }
        .items-list li { padding: 8px 0; border-bottom: 1px solid #e9ecef; }
        .total-row { font-weight: bold; font-size: 18px; color: #2563eb; }
        .footer { text-align: center; margin-top: 30px; padding: 20px; background: #e9ecef; border-radius: 8px; }
        .contact-info { margin: 10px 0; }
    </style>
</head>
<body>
    <div class="header">
        <h1>üõí ${shopName}</h1>
        <div class="order-number">–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ${order.order_number}</div>
        <p>–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ!</p>
    </div>

    <p>–í—ñ—Ç–∞—î–º–æ, <strong>${order.customer?.name || '–®–∞–Ω–æ–≤–Ω–∏–π –∫–ª—ñ—î–Ω—Ç–µ'}</strong>!</p>
    <p>–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è. –ú–∏ –≤–∂–µ –ø–æ—á–∞–ª–∏ –π–æ–≥–æ –æ–±—Ä–æ–±–∫—É.</p>

    <div class="section">
        <h3>üì¶ –î–µ—Ç–∞–ª—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</h3>
        <ul class="items-list">
            ${order.items.map(item => `
                <li>
                    <strong>${item.product?.name || '–¢–æ–≤–∞—Ä'}</strong><br>
                    ${item.quantity} —à—Ç. √ó ${item.unit_price.toFixed(2)} ‚Ç¥ = <strong>${item.total_price.toFixed(2)} ‚Ç¥</strong>
                </li>
            `).join('')}
        </ul>
    </div>

    <div class="section">
        <h3>üí∞ –ü—ñ–¥—Å—É–º–æ–∫</h3>
        <div style="display: flex; justify-content: space-between; margin: 5px 0;">
            <span>–°—É–º–∞ —Ç–æ–≤–∞—Ä—ñ–≤:</span>
            <span>${subtotal.toFixed(2)} ‚Ç¥</span>
        </div>
        <div style="display: flex; justify-content: space-between; margin: 5px 0;">
            <span>–î–æ—Å—Ç–∞–≤–∫–∞:</span>
            <span>${(order.delivery_fee || 0).toFixed(2)} ‚Ç¥</span>
        </div>
        <hr>
        <div class="total-row" style="display: flex; justify-content: space-between; margin: 10px 0;">
            <span>–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞:</span>
            <span>${order.total_amount.toFixed(2)} ‚Ç¥</span>
        </div>
    </div>

    <div class="section">
        <h3>üöö –°–ø–æ—Å—ñ–± –æ—Ç—Ä–∏–º–∞–Ω–Ω—è</h3>
        <p><strong>${deliveryInfo}</strong></p>
        <p>–û—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∏–π —á–∞—Å: <strong>${estimatedTime}</strong></p>
    </div>

    <div class="section">
        <h3>üí≥ –û–ø–ª–∞—Ç–∞</h3>
        <p>–û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ (–≥–æ—Ç—ñ–≤–∫–∞ –∞–±–æ –∫–∞—Ä—Ç–∫–∞)</p>
    </div>

    ${order.notes ? `
    <div class="section">
        <h3>üìù –ö–æ–º–µ–Ω—Ç–∞—Ä –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</h3>
        <p>${order.notes}</p>
    </div>
    ` : ''}

    <div class="section">
        <h3>üìû –©–æ –¥–∞–ª—ñ?</h3>
        <p>–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.</p>
    </div>

    <div class="footer">
        <h3>–î—è–∫—É—î–º–æ –∑–∞ –≤–∏–±—ñ—Ä ${shopName}!</h3>
        <div class="contact-info">
            <div>üìû ${shopPhone}</div>
            <div>‚úâÔ∏è ${shopEmail}</div>
            <div>üåê ${shopWebsite}</div>
        </div>
        <p style="font-size: 12px; color: #666; margin-top: 20px;">
            –¶–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –Ω–∞ —Ü–µ–π –ª–∏—Å—Ç.
        </p>
    </div>
</body>
</html>
    `.trim()

    return { subject, text, html }
  }

  async sendOrderStatusUpdateEmail(order, newStatus) {
    if (!this.isConfigured || !order.customer?.email) {
      return { success: false, error: 'Email service not configured or no customer email' }
    }

    try {
      const emailContent = this.generateStatusUpdateEmail(order, newStatus)
      
      const mailOptions = {
        from: `"${process.env.SHOP_NAME || 'Opillia Shop'}" <${process.env.SMTP_USER}>`,
        to: order.customer.email,
        subject: emailContent.subject,
        text: emailContent.text,
        html: emailContent.html
      }

      const result = await this.transporter.sendMail(mailOptions)
      
      return { success: true, messageId: result.messageId }
    } catch (error) {
      console.error('‚ùå Failed to send status update email:', error)
      return { success: false, error: error.message }
    }
  }

  generateStatusUpdateEmail(order, newStatus) {
    const shopName = process.env.SHOP_NAME || 'Opillia Shop'
    const statusMessages = {
      'CONFIRMED': '–ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ',
      'PREPARING': '–≥–æ—Ç—É—î—Ç—å—Å—è',
      'READY': '–≥–æ—Ç–æ–≤–µ –¥–æ –≤–∏–¥–∞—á—ñ',
      'DELIVERED': '–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ',
      'COMPLETED': '–≤–∏–∫–æ–Ω–∞–Ω–æ'
    }

    const statusText = statusMessages[newStatus] || newStatus.toLowerCase()
    const subject = `–û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ${order.order_number} - ${statusText}`

    const text = `
–í—ñ—Ç–∞—î–º–æ, ${order.customer?.name || '–®–∞–Ω–æ–≤–Ω–∏–π –∫–ª—ñ—î–Ω—Ç–µ'}!

–°—Ç–∞—Ç—É—Å –≤–∞—à–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ${order.order_number} –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞: ${statusText.toUpperCase()}

${newStatus === 'READY' && order.fulfillment === 'PICKUP' ? 
  `üè™ –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≥–æ—Ç–æ–≤–µ –¥–æ —Å–∞–º–æ–≤–∏–≤–æ–∑—É –∑ –º–∞–≥–∞–∑–∏–Ω—É: ${order.branch?.name || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}` : ''}

${newStatus === 'DELIVERED' || newStatus === 'COMPLETED' ? 
  `üåü –î—è–∫—É—î–º–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –ë—É–¥–µ–º–æ –≤–¥—è—á–Ω—ñ –∑–∞ –≤–∞—à –≤—ñ–¥–≥—É–∫ –ø—Ä–æ —è–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤ —Ç–∞ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è.` : ''}

–ó –ø–æ–≤–∞–≥–æ—é,
–ö–æ–º–∞–Ω–¥–∞ ${shopName}

üìû ${process.env.SHOP_PHONE || '+38 (097) 324 46 68'}
‚úâÔ∏è ${process.env.SHOP_EMAIL || 'info@opillia.com.ua'}
    `.trim()

    const html = `
<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</title>
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: linear-gradient(135deg, #2563eb, #7c3aed); color: white; padding: 20px; border-radius: 8px; text-align: center; margin-bottom: 20px; }
        .status-update { background: #d1fae5; border: 2px solid #10b981; padding: 20px; border-radius: 8px; text-align: center; margin: 20px 0; }
        .footer { text-align: center; margin-top: 30px; padding: 20px; background: #e9ecef; border-radius: 8px; }
    </style>
</head>
<body>
    <div class="header">
        <h1>üõí ${shopName}</h1>
        <h2>–û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ${order.order_number}</h2>
    </div>

    <p>–í—ñ—Ç–∞—î–º–æ, <strong>${order.customer?.name || '–®–∞–Ω–æ–≤–Ω–∏–π –∫–ª—ñ—î–Ω—Ç–µ'}</strong>!</p>

    <div class="status-update">
        <h3>üìã –ù–æ–≤–∏–π —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:</h3>
        <h2 style="color: #10b981; margin: 10px 0;">${statusText.toUpperCase()}</h2>
    </div>

    ${newStatus === 'READY' && order.fulfillment === 'PICKUP' ? `
    <div style="background: #fef3c7; border: 2px solid #f59e0b; padding: 15px; border-radius: 8px; margin: 20px 0;">
        <h3>üè™ –ì–æ—Ç–æ–≤–µ –¥–æ —Å–∞–º–æ–≤–∏–≤–æ–∑—É!</h3>
        <p>–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≥–æ—Ç–æ–≤–µ –¥–æ —Å–∞–º–æ–≤–∏–≤–æ–∑—É –∑ –º–∞–≥–∞–∑–∏–Ω—É: <strong>${order.branch?.name || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</strong></p>
    </div>
    ` : ''}

    ${newStatus === 'DELIVERED' || newStatus === 'COMPLETED' ? `
    <div style="background: #ddd6fe; border: 2px solid #8b5cf6; padding: 15px; border-radius: 8px; margin: 20px 0;">
        <h3>üåü –î—è–∫—É—î–º–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!</h3>
        <p>–ë—É–¥–µ–º–æ –≤–¥—è—á–Ω—ñ –∑–∞ –≤–∞—à –≤—ñ–¥–≥—É–∫ –ø—Ä–æ —è–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤ —Ç–∞ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è.</p>
    </div>
    ` : ''}

    <div class="footer">
        <h3>–ó –ø–æ–≤–∞–≥–æ—é, –∫–æ–º–∞–Ω–¥–∞ ${shopName}!</h3>
        <div>üìû ${process.env.SHOP_PHONE || '+38 (097) 324 46 68'}</div>
        <div>‚úâÔ∏è ${process.env.SHOP_EMAIL || 'info@opillia.com.ua'}</div>
    </div>
</body>
</html>
    `.trim()

    return { subject, text, html }
  }
}

// Export singleton instance
export const emailService = new EmailService()
